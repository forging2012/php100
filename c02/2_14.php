<!-------------------------------------------文件名： 2_14.php-------------------------------->
<?php
/**********************算术运算符*******************************/
$m = 10;
$n = 3;
$number = 0;
//加法
$number = $m+$n;
//减法
$number = $m-$n;
//乘法
$number = $m*$n;
//除法
$number = $m/$n;
//取模
$number = $m%$n;
//取反
$number = -$m;
/**********************赋值运算符*******************************/
$number = $m+$n;
$m += 5;
$m -= 2;
$string = "这是";
$string .= "赋值运算符"; 
/**********************位运算符*******************************/
//按位与操作
$m&$n;
//按位或操作
$m|$n;
//按位异或操作
$m^$n;
//按位非操作
~$n;
//左移操作
$m<<$n;
//右移操作
$m>>$n;
$a = "a";
$b = "b";
//字符按位异或操作
$a^$b;
/**********************比较运算符*******************************/
//比较两值是否等于,相等返回TRUE,不相等返回FALSE
$m == $n;
//比较两值及其类型是否相等,相等返回TRUE,不相等返回FALSE
$m === $n;
//比较两值是否不等于,不相等返回TRUE,相等返回FALSE
$m != $n;
//比较两值是否不等于,不相等返回TRUE,相等返回FALSE
$m <> $n;
//比较两值及类型是否不等于,不相等返回TRUE,相等返回FALSE
$m !== $n;
//比较第1个值是否小于第2个值,如果$m小于$n返回TRUE,如果$m大于$n返回FALSE
$m < $n;
//比较第1个值是否大于第2个值,如果$m大于$n返回TRUE,如果$m小于$n返回FALSE
$m > $n;
//比较第1个值是否小于等于第2个值,如果$m小于等于$n返回TRUE,否侧返回FALSE
$m <= $n;
//比较第1个值是否大于等于第2个值,如果$m大于等于$n返回TRUE,否则返回FALSE
$m >= $n;
/**********************错误控制运算符*******************************/
//忽略包含文件时产生的错误
@include("inc.php");
//忽略连接mysql数据库出错产生的错误信息
$conn = @mysql_connect("localhost","username","password");
//忽略打开文件产生的错误信息
$fp  = @fopen("user.xml","w");
function test(){
	return 10;
}
//忽略调用函数失败产生的错误信息
$number = @test();
/**********************执行运算符*******************************/
$output = `dir`;
echo "<pre>$output</pre>";
/**********************递增递减运算符*******************************/
$m = 10;
echo $m++; //输出10
echo $m;   //输出11

$m = 10;
echo ++$m; //输出11
echo $m;   //输出11

$m = 10;
echo $m--; //输出10
echo $m;   //输出9

$m = 10;
echo --$m; //输出9
echo $m;   //输出9

$n='h';
echo ++$n;
echo $n++;
echo $n--;
echo --$n;
/**********************逻辑运算符*******************************/
$m and $n; //如果运算符两边的值都是TRUE,那么值为TRUE,否则为FALSE 
$m && $n;  //如果运算符两边的值都是TRUE,那么值为TRUE,否则为FALSE 
$m or $n;  //如果运算符两边有一个或二个TRUE值,则值为TRUE,否则为FALSE; 
$m || $n;  //如果运算符两边有一个或二个TRUE值,则值为TRUE,否则为FALSE;
$m xor $n; //当运算符两加有一个TRUE时,值为TRUE.但是运算符两边不能同时是TRUE值;
!$m;       //当运算符右边的值为TRUE时,值为FALSE,当运算符右边的值为FALSE时,值为TRUE; 
/**********************字符串运算符*******************************/
$m = "我是";
$n = "字符串";
//使用 . 连接两个字符串
echo $m.$n; //输出 我是字符串

$m = "我是";
//使用 .= 把右边的"字符串"附加到左边的变量中
echo $m .= "字符串"; //输出 我是字符串
/**********************数组运算符*******************************/
$m = array(1,2,3,4,5,6,7,8);
$n = array(1,2,3,4,5,6,7,8,9);
//联合两个数组
$m+$n;
//比较两个数组是否相等
$m == $n;
//比较两个数组是否全等于
$m === $n;
//比较两个数组是否不等于
$m != $n;
//比较两个数组不等的另一种方法
$m <> $n;
//比较两个数组是否不全等于
$m !== $n;
/**********************类型运算符*******************************/
class boy{
	
}
class girl{
	
}

$human = new boy();

if($human instanceof boy) {
    echo '这是男孩子';
}
if($human instanceof girl) {
    echo '这是女孩子';
}
?>
